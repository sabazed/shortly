name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-mod-url:
    name: Test URL Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Test URL Service
        working-directory: ./mod-url
        run: mvn clean test

      - name: Build JAR
        working-directory: ./mod-url
        run: mvn clean package -DskipTests

  test-mod-analytics:
    name: Test Analytics Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Test Analytics Service
        working-directory: ./mod-analytics
        run: mvn clean test

      - name: Build JAR
        working-directory: ./mod-analytics
        run: mvn clean package -DskipTests

  build-docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [test-mod-url, test-mod-analytics]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build mod-url image
        if: needs.test-mod-url.result == 'success'
        uses: docker/build-push-action@v5
        with:
          context: ./mod-url
          load: true
          tags: mod-url:scan

      - name: Build mod-analytics image
        if: needs.test-mod-analytics.result == 'success'
        uses: docker/build-push-action@v5
        with:
          context: ./mod-analytics
          load: true
          tags: mod-analytics:scan

      - name: Run Trivy vulnerability scanner on mod-url
        if: needs.test-mod-url.result == 'success'
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: mod-url:scan
          format: 'sarif'
          output: 'trivy-mod-url.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Run Trivy vulnerability scanner on mod-analytics
        if: needs.test-mod-analytics.result == 'success'
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: mod-analytics:scan
          format: 'sarif'
          output: 'trivy-mod-analytics.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Check if Trivy results exist
        run: |
          ls -la *.sarif || echo "No SARIF files found"

      - name: Upload Trivy scan results for mod-url
        if: needs.test-mod-url.result == 'success' && hashFiles('trivy-mod-url.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-mod-url.sarif'

      - name: Upload Trivy scan results for mod-analytics
        if: needs.test-mod-analytics.result == 'success' && hashFiles('trivy-mod-analytics.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-mod-analytics.sarif'

  deploy:
    name: Deploy to Registry
    runs-on: ubuntu-latest
    needs: [build-docker]
    if: github.ref == 'refs/heads/main' && needs.build-docker.result == 'success'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push mod-url image
        uses: docker/build-push-action@v5
        with:
          context: ./mod-url
          push: true
          tags: ghcr.io/sabazed/shortly/mod-url:latest

      - name: Push mod-analytics image
        uses: docker/build-push-action@v5
        with:
          context: ./mod-analytics
          push: true
          tags: ghcr.io/sabazed/shortly/mod-analytics:latest